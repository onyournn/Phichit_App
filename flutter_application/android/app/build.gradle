plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services" // เพิ่ม Google Services Plugin สำหรับ Firebase
}

android {
    namespace = "com.example.flutter_application_1"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8" // แก้ไขเป็น String เพื่อให้ตรงกับ format ที่ถูกต้อง
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.flutter_application_1"
        // แก้ไข minSdkVersion เป็น 23 เพื่อให้ตรงกับข้อกำหนดของ Firebase
        minSdkVersion 23
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
            // ปิดการ optimize เพื่อหลีกเลี่ยงปัญหากับ Firebase
            minifyEnabled false
            shrinkResources false
        }
    }
}

flutter {
    source = "../.."
}

// เพิ่ม Google Services Plugin หลังจากส่วน android block เพื่อเชื่อมกับ Firebase
apply plugin: 'com.google.gms.google-services'